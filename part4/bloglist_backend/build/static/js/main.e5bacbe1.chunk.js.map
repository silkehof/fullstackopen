{"version":3,"sources":["components/Blog.js","components/NewBlogForm.js","services/blogs.js","services/login.js","components/SuccessNotification.js","components/ErrorNotification.js","components/Togglable.js","App.js","index.js"],"names":["Blog","blog","likeBlog","deleteBlog","username","useState","visible","setVisible","deletebuttonStyle","color","hideWhenVisible","paddingTop","display","showWhenVisible","DeleteButton","user","id","style","onClick","deleteEntry","toggleVisibility","className","paddingBottom","paddingLeft","border","borderColor","borderWidth","marginBottom","lineHeight","background","title","author","url","likes","marginLeft","name","marginRight","NewBlogForm","createBlog","setTitle","setAuthor","setUrl","isButtonDisabled","onSubmit","event","preventDefault","value","onChange","target","disabled","type","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","setToken","newToken","addLike","put","remove","delete","login","credentials","SuccessNotification","message","ErrorNotification","Togglable","React","forwardRef","props","ref","useImperativeHandle","buttonLabel","children","displayName","App","blogs","setBlogs","setUsername","password","setPassword","setUser","successMessage","setSuccessMessage","errorMessage","setErrorMessage","blogFormRef","useRef","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","addBlogLike","blogObject","returnedBlog","console","log","map","find","confirm","filter","setTimeout","catch","error","handleLogin","loginService","setItem","stringify","clear","current","concat","sort","b","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5bacbe1.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst Blog = ({ blog, likeBlog, deleteBlog, username }) => {\n  const [visible, setVisible] = useState(false)\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 10,\n    border: 'solid',\n    borderColor: '#6200B3',\n    borderWidth: 1,\n    marginBottom: 5,\n    lineHeight: 1.5,\n    background: '#B2ABF2'\n  }\n\n  const likeButtonStyle = {\n    marginLeft: 10,\n    color: '#618B25'\n  }\n\n  const hideButtonStyle = {\n    marginRight: 5\n  }\n\n  const deletebuttonStyle = {\n    color: '#ED254E'\n  }\n\n  const usernameStyle = {\n    paddingBottom: 15\n  }\n\n  const hideWhenVisible = {\n    paddingTop: 10,\n    display: visible ? 'none' : ''\n  }\n\n  const showWhenVisible = {\n    paddingTop: 10,\n    display: visible ? '' : 'none'\n  }\n\n  const DeleteButton = () => {\n    if (blog.user.username === username) {\n      return <button id ='delete-button' style={deletebuttonStyle} onClick={deleteEntry}>Delete</button>\n    } else {\n      return null\n    }\n  }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  const addBlogLike = () => {\n    likeBlog({\n      user: blog.user.id,\n      likes: blog.likes + 1,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url\n    }, blog.id)\n  }\n\n  const deleteEntry = () => {\n    deleteBlog(blog.id)\n  }\n\n  return (\n    <div className='blog' style={blogStyle}>\n      <div className='blogtitle'><strong>{blog.title}</strong> by {blog.author}</div>\n      <div style={hideWhenVisible} >\n        <button onClick={toggleVisibility}>View</button>\n      </div>\n      <div style={showWhenVisible}>\n        {blog.url}\n        <div className='likes'>\n          {blog.likes}\n          <button id='like-button' style={likeButtonStyle} onClick={addBlogLike}>Like</button>\n        </div>\n        <div style={usernameStyle}>Created by: {blog.user.name}</div>\n        <button style={hideButtonStyle} onClick={toggleVisibility}>Hide</button>\n        <DeleteButton></DeleteButton>\n      </div>\n    </div>\n  )\n}\n\nexport default Blog\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst NewBlogForm = ({ createBlog }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleTitleChange = (event) => {\n    setTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    setAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    setUrl(event.target.value)\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    createBlog({\n      title: title,\n      author: author,\n      url: url\n    })\n\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  const isButtonDisabled = (title === '' || url === '' )\n\n  return (\n    <div className=\"formDiv\">\n      <h2>Create a new blog entry:</h2>\n\n      <form onSubmit={addBlog}>\n        <div>\n                    Title: <input\n            id ='title'\n            value={title}\n            onChange={handleTitleChange}\n          />\n        </div>\n        <div>\n                    Author: <input\n            id='author'\n            value={author}\n            onChange={handleAuthorChange}\n          />\n        </div>\n        <div>\n                    Url: <input\n            id='url'\n            value={url}\n            onChange={handleUrlChange}\n          />\n        </div>\n        <div>\n          <br></br>\n          <button disabled={isButtonDisabled} type=\"submit\">Save</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nNewBlogForm.propTypes = {\n  createBlog: PropTypes.func.isRequired\n}\n\nexport default NewBlogForm","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst addLike = async(newObject, id) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst remove = async id => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, setToken, addLike, remove }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\n\nconst SuccessNotification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"success\">\n      {message}\n    </div>\n  )\n}\n\nexport default SuccessNotification","import React from 'react'\n\nconst ErrorNotification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default ErrorNotification","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>Cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport NewBlogForm from './components/NewBlogForm'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport SuccessNotification from './components/SuccessNotification'\nimport ErrorNotification from './components/ErrorNotification'\nimport Togglable from './components/Togglable'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const blogFormRef = useRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setSuccessMessage(`Success! Blog \"${blogObject.title}\" has been saved.`)\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setErrorMessage(\n          'Blog could not be saved, please try again!'\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const addBlogLike = (blogObject, id) => {\n    blogService\n      .addLike(blogObject, id)\n      .then(returnedBlog => {\n        console.log(returnedBlog)\n        setBlogs(blogs.map(blog => blog.id !== id ? blog : returnedBlog))\n      })\n  }\n\n  const deleteBlog = (id) => {\n    const blog = blogs.find(blog => blog.id === id)\n\n    if (window.confirm(`Delete ${blog.title}?`)) {\n      blogService\n        .remove(id)\n        .then(returnedBlog => {\n          setBlogs(blogs.filter(blog => blog.id !== id))\n          setSuccessMessage('This worked! Blog has been deleted.')\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        })\n        .catch (error => {\n          setErrorMessage('Sorry, blog could not be deleted!')\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Wrong username or password!')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        Username:\n        <input\n          id='username'\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        Password:\n        <input\n          id='password'\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button id='login-button' type=\"submit\">Login</button>\n    </form>\n  )\n\n  const logoutUser = () => {\n    window.localStorage.clear()\n    setUser(null)\n    setUsername('')\n    setPassword('')\n    setSuccessMessage('Logout was successful, until next time!')\n    setTimeout(() => {\n      setSuccessMessage(null)\n    }, 5000)\n  }\n\n  const sortByLikes = (a, b) => b.likes - a.likes\n\n  return (\n    <div>\n      <h1>Blogs</h1>\n      <SuccessNotification message={successMessage} />\n      <ErrorNotification message={errorMessage} />\n      {user === null ?\n        loginForm() :\n        <div>\n          <button onClick={logoutUser}>Logout</button>\n          <p>Welcome {user.name}, you are logged in!</p>\n          <Togglable buttonLabel=\"New blog entry\" ref={blogFormRef}>\n            <NewBlogForm createBlog={addBlog} />\n          </Togglable>\n          <h2>My saved blogs:</h2>\n          <div className='bloglist'>\n            {blogs.sort(sortByLikes).map(blog =>\n              <Blog\n                key={blog.id}\n                username={user.username}\n                blog={blog}\n                likeBlog={addBlogLike}\n                deleteBlog={deleteBlog} />\n            )}\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}